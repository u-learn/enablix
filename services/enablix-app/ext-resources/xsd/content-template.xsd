<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">
	
	<xs:element name="contentTemplate">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dataDefinition" type="dataDefinitionType"/>
				<xs:element name="uiDefinition" type="uiDefinitionType"/>
				<xs:element name="portalUIDefinition" type="portalUIDefType" minOccurs="0"/>
				<xs:element name="contentTypeMappingConfig" type="contentTypeMappingConfigType" minOccurs="0"/>
				<xs:element name="dataSegmentDefinition" type="dataSegmentDefinitionType" minOccurs="0"/>
				<xs:element name="qualityRuleConfig" type="qualityRuleConfigType" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="version" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="dataDefinitionType">
		<xs:sequence>
			<xs:element name="container" type="containerType" maxOccurs="unbounded"/>
			<xs:element name="userProfileRef" type="userProfileRefType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="userProfileRefType">
		<xs:sequence>
			<xs:element name="containerQId" type="xs:string"/>
			<xs:element name="emailAttributeId" type="xs:string"/> 
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="contentTypeMappingConfigType">
		<xs:sequence>
			<xs:element name="contextConfig" type="contentTypeMappingContextType"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="contentTypeMappingContextType">
		<xs:sequence>
			<xs:element name="containerDataContext" type="containerDataContextType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="dataSegmentDefinitionType">
		<xs:sequence>
			<xs:element name="segmentAttr" type="contentItemType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="qualityRuleConfigType">
		<xs:sequence>
			<xs:element name="qualityRules" type="qualityRulesType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="qualityRulesType">
		<xs:sequence>
			<xs:element name="rule" type="qualityRuleType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="qualityRuleType">
		<xs:sequence>
			<xs:choice>
				<xs:element name="exclude" type="containerRefListType" minOccurs="0"/>
				<xs:element name="include" type="containerRefListType" minOccurs="0"/>
			</xs:choice>
			<xs:element name="configParams" type="paramSetType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string"/>
	</xs:complexType>
	
	<xs:complexType name="containerRefListType">
		<xs:sequence>
			<xs:element name="container" type="containerRefType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="containerRefType">
		<xs:attribute name="qualifiedId" type="xs:string" use="required"/>
	</xs:complexType>
	
	
	<xs:complexType name="containerDataContextType">
		<xs:attribute name="qualifiedId" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="baseContentType">
		<xs:attribute name="id" type="xs:string" use="required"/>
		<xs:attribute name="qualifiedId" type="xs:string"/>
		<xs:attribute name="label" type="xs:string" use="optional"/>
		<xs:attribute name="singularLabel" type="xs:string" use="optional"/>
		<xs:attribute name="searchBoost" type="xs:nonNegativeInteger" use="optional" default="1"/>
	</xs:complexType>
	
	<xs:complexType name="qualityControlledContentType">
		<xs:complexContent>
			<xs:extension base="baseContentType">
				<xs:sequence>
					<xs:element name="qualityConfig" type="qualityConfigType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="qualityConfigType">
		<xs:complexContent>
			<xs:extension base="paramSetType">
				<xs:sequence>
					<xs:element name="paramSet" type="paramSetType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="paramSetType">
		<xs:sequence>
			<xs:element name="param" type="parameterType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" use="optional"/>
	</xs:complexType>
	
	<xs:complexType name="parameterType">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="containerType">
		<xs:complexContent>
			<xs:extension base="baseContainerType">
				<xs:sequence>
					<xs:element name="container" type="containerType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="referenceable" type="xs:boolean" default="true"/>
				<xs:attribute name="refData" type="xs:boolean" default="false"/>
				<xs:attribute name="single" type="xs:boolean" default="false"/>
				<xs:attribute name="linkContainerQId" type="xs:string"/>
				<xs:attribute name="linkContentItemId" type="xs:string"/>
				<xs:attribute name="businessCategory" type="containerBusinessCategoryType"/>
				<xs:attribute name="color" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:simpleType name="containerBusinessCategoryType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BUSINESS_CONTENT" />
			<xs:enumeration value="BUSINESS_DIMENSION" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="contentItemType">
		<xs:complexContent>
			<xs:extension base="qualityControlledContentType">
				<xs:choice minOccurs="0">
					<xs:element name="text" type="textType"/>
					<xs:element name="bounded" type="boundedType"/>
					<xs:element name="doc" type="docType"/>
					<xs:element name="dateTime" type="dateTimeType"/>
					<xs:element name="numeric" type="numericType"/>
					<xs:element name="contentStack" type="contentStackType"/>
					<xs:element name="richText" type="richTextType"/>
				</xs:choice>
				<xs:attribute name="type" type="contentItemClassType" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:simpleType name="contentItemClassType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="text" />
			<xs:enumeration value="bounded" />
			<xs:enumeration value="doc" />
			<xs:enumeration value="dateTime" />
			<xs:enumeration value="numeric" />
			<xs:enumeration value="contentStack" />
			<xs:enumeration value="richText" />
		</xs:restriction>
	</xs:simpleType>
		
	<xs:complexType name="textType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="boundedType">
		<xs:choice>
			<xs:element name="fixedList" type="boundedFixedListType"/>
			<xs:element name="refList" type="boundedRefListType"/>
		</xs:choice>
		<xs:attribute name="multivalued" type="xs:boolean"/>
	</xs:complexType>
	
	<xs:complexType name="boundedFixedListType">
		<xs:sequence>
			<xs:element name="data" type="fixedListDataType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="fixedListDataType">
		<xs:complexContent>
			<xs:extension base="baseContentType"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="boundedRefListType">
		<xs:choice>
			<xs:element name="datastore" type="boundedListDatastoreType"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="boundedListDatastoreType">
		<xs:sequence>
			<xs:element name="storeId" type="xs:string"/>
			<xs:element name="dataId" type="xs:string"/>
			<xs:element name="dataLabel" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="hyperlink" type="xs:boolean"/>
		<xs:attribute name="location" type="datastoreLocationType" default="CONTENT"/>
	</xs:complexType>
	
	<xs:complexType name="docType">
		<xs:choice>
			<xs:element name="diskDoc" type="diskDocType"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="diskDocType">
		<xs:sequence>
			<xs:element name="location" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="dateTimeType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="numericType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="contentStackType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="richTextType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:simpleType name="datastoreLocationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CONTENT" />
			<xs:enumeration value="TENANT_DB" />
			<xs:enumeration value="SYSTEM_DB" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="baseContainerType">
		<xs:complexContent>
			<xs:extension base="qualityControlledContentType">
				<xs:sequence>
					<xs:element name="desc" type="xs:string" minOccurs="0"/>
					<xs:element name="contentItem" type="contentItemType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- #############  UI Definition types ############## -->
	
	<xs:complexType name="uiDefinitionType">
		<xs:sequence>
			<xs:element name="contentUIDef" type="contentUIDefType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="contentUIDefType">
		<xs:choice>
			<xs:element name="container" type="containerUIDefType"/>
			<xs:element name="text" type="textUIDefType"/>
			<xs:element name="bounded" type="boundedUIDefType"/>
			<xs:element name="doc" type="docUIDefType"/>
			<xs:element name="dateTime" type="dateTimeUIDefType"/>
			<xs:element name="numeric" type="numericUIDefType"/>
		</xs:choice>
		<xs:attribute name="qualifiedId" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="containerUIDefType">
		<xs:sequence>
			<xs:element name="enclosure" type="childEnclosureType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="listViewConfig" type="containerListViewConfigType" minOccurs="0"/>
			<xs:element name="portalConfig" type="containerPortalConfigType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="labelQualifiedId" type="xs:string"/>
	</xs:complexType>
	
	<xs:complexType name="containerPortalConfigType">
		<xs:sequence>
			<xs:element name="headingContentItem" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="id" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="condensedView" type="portalContentCondensedViewType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="containerListViewConfigType">
		<xs:sequence>
			<xs:element name="hideContentItem" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="id" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="childEnclosureType">
		<xs:sequence>
			<xs:element name="childContainer" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="id" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required"/>
		<xs:attribute name="label" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="textUIDefType">
		<xs:sequence>
			<xs:element name="autoPopulate" type="textAutoPopulateType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="type" type="textUIClassType"/>
	</xs:complexType>
	
	<xs:simpleType name="textUIClassType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="short" />
			<xs:enumeration value="long" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="textAutoPopulateType">
		<xs:choice>
			<xs:element name="refContentItem" type="refContentItemType"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="refContentItemType">
		<xs:attribute name="itemId" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="boundedUIDefType">
		<xs:choice>
			<xs:element name="dropdown" type="dropdownType"/>
			<xs:element name="radioButton" type="radioButtonType"/>
			<xs:element name="checkbox" type="checkboxType"/>
			<xs:element name="autoSuggest" type="autoSuggestType"/>
		</xs:choice>
	</xs:complexType>
	
	<xs:complexType name="dropdownType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="radioButtonType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="checkboxType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="autoSuggestType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="docUIDefType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="dateTimeUIDefType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<xs:complexType name="numericUIDefType">
		<!-- no definition as of now -->
	</xs:complexType>
	
	<!-- Portal UI definition -->
	<xs:complexType name="portalUIDefType">
		<xs:sequence>
			<xs:element name="topNavigation" type="topNavType" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="topNavType">
		<xs:sequence>
			<xs:element name="itemContainers" type="itemContainersType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="enclosures" type="portalTopNavEnclosuresType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="itemContainersType">
		<xs:sequence>
			<xs:element name="itemContainer" type="itemContainerType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="itemContainerType">
		<xs:attribute name="qualifiedId" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="portalTopNavEnclosuresType">
		<xs:sequence>
			<xs:element name="enclosure" type="childEnclosureType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="portalContentCondensedViewType">
		<xs:sequence>
			<xs:element name="showContentItem" type="showContentItemType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="showContentItemType">
		<xs:attribute name="id" type="xs:string" use="required"/>
	</xs:complexType>
	
</xs:schema>