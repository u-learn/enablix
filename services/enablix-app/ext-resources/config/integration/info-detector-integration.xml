<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd">

	<!-- Direct channels -->
	<int:channel id="info-detect-request-channel"/>
	
	<int:channel id="info-detect-response-channel"/>
	
	<int:channel id="info-exists-filter-channel"/>
	
	<int:channel id="info-exists-channel"/>
	
	<int:channel id="content-mapping-attr-analyser-channel"/>
	
	<int:channel id="mongo-linked-cont-analyser-channel"/>
	
	<int:channel id="analysed-info-channel"/>
	
	<int:channel id="content-suggest-builder-channel"/>
	
	<int:channel id="info-type-router-channel"/>
	
	<int:channel id="info-type-analyser-channel"/>
	
	<int:channel id="content-save-router-channel"/>
	
	<int:channel id="content-persistor-channel"/>


	<!-- we are using direct channel which are synchronous and hence 0 timeout will work. -->
	<int:gateway id="gateway"
				 service-interface="com.enablix.analytics.info.detection.InfoDetectorSIGateway" 
				 default-request-channel="info-detect-request-channel"
				 default-reply-channel="info-detect-response-channel"
				 default-reply-timeout="0"/>
				 
	<int:header-enricher input-channel="info-detect-request-channel" output-channel="info-type-analyser-channel">
		<int:header name="checkInfoAlreadyExist" expression="payload.isSaveContentRecord()"/>
		<int:header name="saveContentRecord" expression="payload.isSaveContentRecord()"/>
		<int:header name="infoType" expression="payload.getInformation().type()"/>
	</int:header-enricher>
				 
	<int:service-activator id="infoContTypeIdentifierActivator" 
						   input-channel="info-type-analyser-channel"
						   output-channel="info-type-router-channel"
						   requires-reply="true"
						   ref="infoTypeAnalyser" method="analyse"/>

	<int:header-value-router header-name="checkInfoAlreadyExist" 
							 input-channel="info-type-router-channel"
							 default-output-channel="info-tag-enricher-channel">
		<int:mapping value="true" channel="info-exists-filter-channel"/>
		<int:mapping value="false" channel="info-tag-enricher-channel"/>
	</int:header-value-router>
						   
	<int:filter id="infoExistsFilter" input-channel="info-exists-filter-channel"
				output-channel="info-tag-enricher-channel"
				discard-channel="info-exists-channel"
				ref="wpPostExistsChecker"></int:filter>
				
	<int:transformer input-channel="info-exists-channel"
					 output-channel="info-detect-response-channel"
					 expression="new java.util.ArrayList()"/>
	
	<int:service-activator id="infoTagEnricherActivator"
						   input-channel="info-tag-enricher-channel"
						   output-channel="content-mapping-attr-analyser-channel"
						   requires-reply="true"
						   ref="infoTagAliasEnricher" method="enrich"/>
	
	<int:service-activator id="contentMappingAnalyserActivator" 
						   input-channel="content-mapping-attr-analyser-channel"
						   output-channel="doc-attr-analyser-channel"
						   requires-reply="true"
						   ref="contentMappingAttrAnalyser" method="analyse"/>
						   
	<int:service-activator id="docAttrAnalyserActivator"
	   					   input-channel="doc-attr-analyser-channel"
						   output-channel="mongo-linked-cont-analyser-channel"
						   requires-reply="true"
						   ref="docAttrAnalyser" method="analyse"/>
	
	<int:service-activator id="mongoLinkContAnalyserActivator" 
						   input-channel="mongo-linked-cont-analyser-channel"
						   output-channel="analysed-info-channel"
						   requires-reply="true"
						   ref="mongoLinkContainerAnalyser" method="analyse"/>
						   
	<int:transformer input-channel="analysed-info-channel"
					 output-channel="content-suggest-builder-channel"
					 expression="payload.getAssessment()"/>
	
	<int:service-activator id="contentSuggestBuilderActivator" 
						   input-channel="content-suggest-builder-channel"
						   output-channel="content-save-router-channel"
						   requires-reply="true"
						   ref="contentSuggestBuilder" method="build"/>
	
	<int:header-value-router header-name="saveContentRecord" 
							 input-channel="content-save-router-channel"
							 default-output-channel="info-detect-response-channel">
		<int:mapping value="true" channel="content-persistor-channel"/>
		<int:mapping value="false" channel="info-detect-response-channel"/>
	</int:header-value-router>
	
	<int:service-activator id="contentPersistorActivator" 
						   input-channel="content-persistor-channel"
						   output-channel="info-detect-response-channel"
						   requires-reply="true"
						   ref="contentRecordPersistor" method="persist"/>
				 
	<bean id="infoTypeAnalyser" class="com.enablix.analytics.info.detection.impl.InfoTypeAnalyser">
		<property name="infoTypeResolvers">
			<list>
				<ref bean="ebxTypenameInfoTypeResolver"/>
				<ref bean="wpPostInfoTypeResolver"/>
				<ref bean="urlPatternBasedInfoTypeResolver"/>
				<ref bean="defaultInfoTypeResolver"/>
			</list>
		</property>
	</bean>
	
	<bean id="wpPostInfoTypeResolver" class="com.enablix.wordpress.info.detection.WPPostInfoTypeAnalyser"/>
	<bean id="defaultInfoTypeResolver" class="com.enablix.analytics.info.detection.impl.DefaultInfoTypeResolver"/>
	<bean id="urlPatternBasedInfoTypeResolver" class="com.enablix.analytics.info.detection.impl.InfoLinkPatternBasedTypeResolver"/>
	<bean id="ebxTypenameInfoTypeResolver" class="com.enablix.analytics.info.detection.impl.TypeNameInfoResolver"/>
	
	<bean id="infoTagAliasEnricher" class="com.enablix.analytics.info.detection.impl.InfoTagAliasEnricher"/>
	
	<bean id="contentMappingAttrAnalyser" class="com.enablix.analytics.info.detection.mapping.ContentMappingBasedAttrAnalyser"/>
	
	<bean id="docAttrAnalyser" class="com.enablix.analytics.info.detection.impl.DocAttrAnalyser"/>
	
	<bean id="mongoLinkContainerAnalyser" class="com.enablix.analytics.info.detection.mongo.MongoLookupLinkAnalyser"/>
	
	<bean id="contentSuggestBuilder" class="com.enablix.analytics.info.detection.impl.ContentSuggestionBuilderImpl"/>
	
	<bean id="wpPostExistsChecker" class="com.enablix.wordpress.info.detection.WPInfoAlreadyExistsFilter"/>
	
	<bean id="contentRecordPersistor" class="com.enablix.analytics.info.detection.ContentRecordPersister"/>

</beans>