<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	
	<xs:complexType name="filterCriteriaType">
		<xs:sequence>
			<xs:element name="filter" type="filterType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="filterType">
		<xs:sequence>
			<xs:element name="attributeId" type="xs:string"/>
			<xs:element name="operator" type="filterOperatorType" default="MATCH" minOccurs="0"/>
			<xs:choice>
				<xs:element name="constant" type="filterConstantType"/>
				<xs:element name="parentAttribute" type="filterParentAttributeType"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="filterOperatorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MATCH" />
			<xs:enumeration value="NOT_MATCH" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="filterConstantType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="filterParentAttributeType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="parentQId" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="matchCriteriaType">
		<xs:sequence>
			<xs:element name="match" type="matchType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="matchType">
		<xs:complexContent>
			<xs:extension base="filterType"></xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="tagsType">
		<xs:sequence>
			<xs:element name="tag" type="xs:string" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	  
	<xs:complexType name="identifiableType">
		<xs:attribute name="id" type="xs:string"/>
		<xs:attribute name="name" type="xs:string"/>
	</xs:complexType>
	
	<xs:complexType name="describedType">
		<xs:complexContent>
			<xs:extension base="identifiableType">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="describedAndVersionedType">
		<xs:complexContent>
			<xs:extension base="describedType">
				<xs:attribute name="version" type="xs:integer" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="baseConditionType">
		<xs:attribute name="onItem" type="xs:string"/>
		<xs:attribute name="negate" type="xs:boolean" default="false"/>
	</xs:complexType>
	
	<xs:complexType name="basicConditionType">
		<xs:complexContent>
			<xs:extension base="baseConditionType">
				<xs:sequence>
					<xs:element name="attribute" type="condAttrType"/>
					<xs:element name="value" type="condValueType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>	
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="condAttrType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="condValueType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	 
	<xs:complexType name="andConditionType">
		<xs:complexContent>
			<xs:extension base="groupConditionType"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="orConditionType">
		<xs:complexContent>
			<xs:extension base="groupConditionType"/>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="groupConditionType">
		<xs:complexContent>
			<xs:extension base="baseConditionType">
				<xs:sequence>
					<xs:element name="andCondition" type="andConditionType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="orCondition" type="orConditionType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="basicCondition" type="basicConditionType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>	
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="conditionType">
		<xs:choice>
			<xs:element name="andCondition" type="andConditionType"/>
			<xs:element name="orCondition" type="orConditionType"/>
			<xs:element name="basicCondition" type="basicConditionType"/>
		</xs:choice>
	</xs:complexType>
	
</xs:schema>